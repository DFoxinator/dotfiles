# Output the number of current jobs running in the background
function __ps1_exit_status() {
	local exit_status=$1
	[ $exit_status -ne 0 ] && echo -n "E:${exit_status} "
}

# Output the number of current jobs running in the background
function __ps1_jobs_run() {
	local job_count=$1
	[ $job_count -gt 0 ] && echo -n "bg:${job_count} "
}

# Output information about the current directory's repository
function __ps1_repo_info() {
	type __git_ps1 &> /dev/null && __git_ps1
}

# generate the bash prompt
function __ps1_create() {
	PS1=''
	# open bracket
	PS1="$PS1"'['
	# show exit code
	PS1="$PS1"'\[\e[31m\]$(__ps1_exit_status "$?")\[\e[0m\]'
	# show number of background jobs
	PS1="$PS1"'\[\e[0;36m\]$(__ps1_jobs_run "\j")\[\e[0m\]'
	# time
	PS1="$PS1"'\[\e[37m\]\T\[\e[0m\] '
	# load
	PS1="$PS1"'\[\e[0;35m\]$(__ps1_proc_use)\[\e[0m\]'
	# user
	PS1="$PS1"'\[\e[32m\]\u\[\e[0m\]'
	# [@] based on environment
	# If ssh connection
	if [ -n "${SSH_CONNECTION:-}" ]; then
		PS1="$PS1"'@'
	else
		# otherwise
		PS1="$PS1"'@'
	fi
	# [host|screen session]
	if [ "$TERM" != "screen" ]; then
		PS1="$PS1"'\[\e[32m\]\h\[\e[0m\]'
	else
		# otherwise
		PS1="$PS1"'\[\e[32;4m\]$STY\[\e[0m\]'
	fi
	# space
	PS1="$PS1"' '
	# working directory
	PS1="$PS1"'\[\e[33m\]\W\[\e[0m\]'
	# git status
	PS1="$PS1"'\[\e[31m\]$(__ps1_repo_info)\[\e[0m\]'
	# close bracket
	PS1="$PS1"']\$ '

	# Set the title bar if we are in xterm
	case "$TERM" in
		xterm*|rxvt*)
			PS1="\[\e]0;\u@\h:\W\007\]$PS1"
			;;
		*)
			;;
	esac
}
# Execute the prompt creation function
__ps1_create
export PS1

# show git status
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUPSTREAM="auto"
