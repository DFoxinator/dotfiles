case "$TERM" in
	xterm*)
		export TERM="xterm-256color"
		;;
	rxvt*)
		export TERM="rxvt-256color"
		;;
	screen*)
		export TERM="screen-256color"
		;;
	*)
		;;
esac
	
# Output the number of current jobs running in the background
function __ps1_exit_status() {
	local exit_status=$1
	[ $exit_status -ne 0 ] && echo -n "(E:${exit_status}) "
}

# Output the number of current jobs running in the background
function __ps1_jobs_run() {
	local job_count=$1
	[ $job_count -gt 0 ] && echo -n "bg:${job_count} "
}

# Output information about the current directory's repository
function __ps1_repo_info() {
	type __git_ps1 &> /dev/null && __git_ps1 "$@"
}

# generate the bash prompt
function __ps1_create() {
	# quick reference to colors
	local COLOR_BOLD='\[\e[1m\]'
	local COLOR_UNDERLINE='\[\e[4m\]'
	local COLOR_RESET='\[\e[0m\]'
	local COLOR_GREY='\[\e[38;5;244m\]'
	local COLOR_DARK_GREY='\[\e[38;5;235m\]'
	# colors for individual parts of the bash prompt
	local COLOR_EXIT_ERROR='\[\e[38;5;196m\]'
	local COLOR_BG_JOBS='\[\e[38;5;42m\]'
	local COLOR_USER='\[\e[38;5;197m\]'
	local COLOR_HOST='\[\e[38;5;208m\]'
	local COLOR_HOST_SCREEN='\[\e[4m\]\[\e[38;5;214m\]'
	local COLOR_WORK_DIR='\[\e[38;5;142m\]'
	local COLOR_WORK_DIRINFO='\[\e[38;5;35m\]'
	local COLOR_GIT='\[\e[38;5;135m\]'
	
	# load avg colorization
	local loadavg='
		load=$(__ps1_proc_use);
		if [ "$DOTENV" == "cygwin" ]; then
			loadmod=$(expr $(echo "${load}" | sed "s/^0*\([0-9]\+\)\..\+\$/\1/") / 10 )
		else
			loadmod=$(echo "${load}" | sed "s/^0*\([0-9]\+\)\..\+\$/\1/")
		fi
		if [ $loadmod -gt 9 ]; then
			loadmod=9
		fi
		loadcolors=(
			"\[\e[38;5;159m\]"
			"\[\e[38;5;153m\]"
			"\[\e[38;5;152m\]"
			"\[\e[38;5;146m\]"
			"\[\e[38;5;145m\]"
			"\[\e[38;5;139m\]"
			"\[\e[38;5;138m\]"
			"\[\e[38;5;137m\]"
			"\[\e[38;5;131m\]"
			"\[\e[38;5;124m\]"
		)
		echo "${loadcolors[$loadmod]}$load'"${COLOR_RESET}"' "
	';
	if [ -n "$_PS1_HIDE_LOAD" ] ; then
		loadavg=''
	fi
	
	# datetime colorization
	local datetime='
		time=$(date +"%H")
		color="\[\e[38;5;153m\]"
		if [ ${time} -ge 8 -a ${time} -le 18 ]; then
		   color="\[\e[38;5;251m\]"
		fi
		echo "${color}\T'"${COLOR_RESET}"'"
	';

	# Start PS1 description
	PS1=''
	# open bracket
	PS1="$PS1""${COLOR_BOLD}${COLOR_GREY}"'['"${COLOR_RESET}"
	# show exit code
	PS1="$PS1""${COLOR_EXIT_ERROR}"'$(__ps1_exit_status "$?")'"${COLOR_RESET}"
	# show number of background jobs
	PS1="$PS1""${COLOR_BG_JOBS}"'$(__ps1_jobs_run "\j")'"${COLOR_RESET}"
	# time
	PS1="$PS1\$($datetime)"' '
	# load
	PS1="$PS1\$($loadavg)"
	# user
	PS1="$PS1""${COLOR_USER}"'\u'"${COLOR_RESET}"
	# [@] based on environment
	PS1="$PS1""${COLOR_GREY}"
	# If ssh connection
	if [ -n "${SSH_CONNECTION:-}" ]; then
		PS1="$PS1"'@'
	else
		# otherwise
		PS1="$PS1"'#'
	fi
	PS1="$PS1""${COLOR_RESET}"
	# [host|screen session]
	case "$TERM" in
		screen*)
			PS1="$PS1""${COLOR_HOST_SCREEN}""$STY"
			;;
		*)
			PS1="$PS1""${COLOR_HOST}"'\h'
			;;
	esac
	# space
	PS1="$PS1""${COLOR_RESET}"' '
	# working directory
	PS1="$PS1""${COLOR_WORK_DIR}"'\W'"${COLOR_RESET}"
	# working directory information (number of files | total file size)
	PS1="$PS1""${COLOR_WORK_DIRINFO}"'<$(/bin/ls -1 | /usr/bin/wc -l | /bin/sed "s/ //g")|$(/bin/ls -lah | /bin/grep -m 1 total | /bin/sed "s/total //")b>'"${COLOR_RESET}"
	# git status
	PS1="$PS1""${COLOR_GIT}"'$(__ps1_repo_info " (%s)")'"${COLOR_RESET}"
	# close bracket
	PS1="$PS1""${COLOR_BOLD}${COLOR_GREY}"']'"${COLOR_RESET}"'\$ '

	# Set the title bar if we are in xterm
	case "$TERM" in
		xterm*|rxvt*)
			PS1="\[\e]0;\u@\h:\W\007\]$PS1"
			;;
		*)
			;;
	esac
}
# Execute the prompt creation function
__ps1_create
export PS1
unset __ps1_create

# show git status
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWSTASHSTATE=true
export GIT_PS1_SHOWUNTRACKEDFILES=true
export GIT_PS1_SHOWUPSTREAM="auto"
